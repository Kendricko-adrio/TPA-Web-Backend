
type Game {
    ID: Int!
    Name: String!
    Description: String!
    Price: Int!
    Rating: Int!
    imageBanner: String!
    Image: String!
    tag: String!
    systemRequirement: String!
    users: [User!]!
    wishlist: [User!]!
    genre: [Genre!]!
    gameSlideShow : [GameSlideShow!]!
    post: [Post!]!
    CreatedAt: Time!
    UpdatedAt: Time!
    DeletedAt: Time
}

type Query{
    allGame : [Game!]!
    getAllGamesPaginated(page: Int!): [Game!]!
    getGameById(id: Int!): Game!
    searchGameByTitle(title: String!): [Game!]!
    searchGameInfinite(title: String! page: Int!): [Game!]!
    getTotalGame: Int!
    getFilterGame(genre: Int!, price: Int!, title: String!): [Game!]!
    getNewGame: [Game!]!
    getTopSeller: [Game!]!
    getGameInDiscussion: [Game!]!
}

input gameInput{
    ID: Int!
    Name: String!
    Description: String!
    Price: Int!
    Rating: Int!
    imageBanner: String!
    Image: String!
    gameSlideShow: [String!]!
    genre: [Int!]!
    systemRequirement: String!
}

extend type Mutation{
    insertGame(game: gameInput!): Game!
    updateGame(game: gameInput!): Game!
    deleteGame(id: Int!): Int!
}